
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQUIVALENCErightIMPLICATIONleftDISJONCTIONleftCONJONCTIONleftNEGATIONCONJONCTION DISJONCTION EGAL EQUIVALENCE EXISTENTIEL FALSE IMPLICATION LEFTPAR NEGATION PREDICAT_1 PREDICAT_2 RIGHTPAR TRUE UNIVERSEL VARIABLE VIRGULE\n\t\tracine : formule\n\t\t\t | empty\n\t\t\n\t\tformule : EXISTENTIEL VARIABLE formule\n\t\t\t\t   |  UNIVERSEL VARIABLE formule\n\t\t\n\t\tformule : formule DISJONCTION formule\n\t\t\t\t   |  formule CONJONCTION formule\n\t\t\t\t   |  formule IMPLICATION formule\n\t\t\t\t   |  formule EQUIVALENCE formule\n\t\t\n\t\tformule : NEGATION formule\n\t\t\n\t\tformule : LEFTPAR formule RIGHTPAR\n\t\t\n\t\tformule : formuleAtomique\n\t\t\n\t\tformuleAtomique : TRUE\n\t\t\t\t\t\t| FALSE\n\t\t\n\t\tformuleAtomique : PREDICAT_1 LEFTPAR terme RIGHTPAR\n\t\t\n\t\tformuleAtomique : PREDICAT_2 LEFTPAR terme VIRGULE terme RIGHTPAR\n\t\t\n\t\tformuleAtomique : terme EGAL terme\n\t\t\n\t\tterme : VARIABLE\n\t\t\n\t\tempty :\n\t\t'
    
_lr_action_items = {'DISJONCTION':([3,4,8,9,14,16,20,26,27,29,31,32,33,34,35,36,39,],[-17,-13,-11,-12,22,22,-9,22,-10,22,-16,-5,22,22,-6,-14,-15,]),'IMPLICATION':([3,4,8,9,14,16,20,26,27,29,31,32,33,34,35,36,39,],[-17,-13,-11,-12,24,24,-9,24,-10,24,-16,-5,24,24,-6,-14,-15,]),'EXISTENTIEL':([0,5,12,15,18,22,23,24,25,],[2,2,2,2,2,2,2,2,2,]),'VARIABLE':([0,2,5,10,12,15,17,18,19,21,22,23,24,25,37,],[3,15,3,18,3,3,3,3,3,3,3,3,3,3,3,]),'FALSE':([0,5,12,15,18,22,23,24,25,],[4,4,4,4,4,4,4,4,4,]),'PREDICAT_1':([0,5,12,15,18,22,23,24,25,],[6,6,6,6,6,6,6,6,6,]),'CONJONCTION':([3,4,8,9,14,16,20,26,27,29,31,32,33,34,35,36,39,],[-17,-13,-11,-12,25,25,-9,25,-10,25,-16,25,25,25,-6,-14,-15,]),'LEFTPAR':([0,5,6,11,12,15,18,22,23,24,25,],[5,5,17,19,5,5,5,5,5,5,5,]),'EGAL':([3,13,],[-17,21,]),'EQUIVALENCE':([3,4,8,9,14,16,20,26,27,29,31,32,33,34,35,36,39,],[-17,-13,-11,-12,23,23,-9,23,-10,23,-16,-5,-8,-7,-6,-14,-15,]),'TRUE':([0,5,12,15,18,22,23,24,25,],[9,9,9,9,9,9,9,9,9,]),'UNIVERSEL':([0,5,12,15,18,22,23,24,25,],[10,10,10,10,10,10,10,10,10,]),'RIGHTPAR':([3,4,8,9,16,20,26,27,28,29,31,32,33,34,35,36,38,39,],[-17,-13,-11,-12,27,-9,-3,-10,36,-4,-16,-5,-8,-7,-6,-14,39,-15,]),'PREDICAT_2':([0,5,12,15,18,22,23,24,25,],[11,11,11,11,11,11,11,11,11,]),'$end':([0,1,3,4,7,8,9,14,20,26,27,29,31,32,33,34,35,36,39,],[-18,-2,-17,-13,0,-11,-12,-1,-9,-3,-10,-4,-16,-5,-8,-7,-6,-14,-15,]),'NEGATION':([0,5,12,15,18,22,23,24,25,],[12,12,12,12,12,12,12,12,12,]),'VIRGULE':([3,30,],[-17,37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'racine':([0,],[7,]),'empty':([0,],[1,]),'terme':([0,5,12,15,17,18,19,21,22,23,24,25,37,],[13,13,13,13,28,13,30,31,13,13,13,13,38,]),'formuleAtomique':([0,5,12,15,18,22,23,24,25,],[8,8,8,8,8,8,8,8,8,]),'formule':([0,5,12,15,18,22,23,24,25,],[14,16,20,26,29,32,33,34,35,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> racine","S'",1,None,None,None),
  ('racine -> formule','racine',1,'p_racine','parserLogique.py',58),
  ('racine -> empty','racine',1,'p_racine','parserLogique.py',59),
  ('formule -> EXISTENTIEL VARIABLE formule','formule',3,'p_formule','parserLogique.py',70),
  ('formule -> UNIVERSEL VARIABLE formule','formule',3,'p_formule','parserLogique.py',71),
  ('formule -> formule DISJONCTION formule','formule',3,'p_formule_quantificateur','parserLogique.py',83),
  ('formule -> formule CONJONCTION formule','formule',3,'p_formule_quantificateur','parserLogique.py',84),
  ('formule -> formule IMPLICATION formule','formule',3,'p_formule_quantificateur','parserLogique.py',85),
  ('formule -> formule EQUIVALENCE formule','formule',3,'p_formule_quantificateur','parserLogique.py',86),
  ('formule -> NEGATION formule','formule',2,'p_negation','parserLogique.py',100),
  ('formule -> LEFTPAR formule RIGHTPAR','formule',3,'p_parentheses','parserLogique.py',108),
  ('formule -> formuleAtomique','formule',1,'p_formuleatomique','parserLogique.py',116),
  ('formuleAtomique -> TRUE','formuleAtomique',1,'p_vrai_faux','parserLogique.py',128),
  ('formuleAtomique -> FALSE','formuleAtomique',1,'p_vrai_faux','parserLogique.py',129),
  ('formuleAtomique -> PREDICAT_1 LEFTPAR terme RIGHTPAR','formuleAtomique',4,'p_predicat1','parserLogique.py',141),
  ('formuleAtomique -> PREDICAT_2 LEFTPAR terme VIRGULE terme RIGHTPAR','formuleAtomique',6,'p_predicat2','parserLogique.py',150),
  ('formuleAtomique -> terme EGAL terme','formuleAtomique',3,'p_egalite','parserLogique.py',159),
  ('terme -> VARIABLE','terme',1,'p_terme_variable','parserLogique.py',172),
  ('empty -> <empty>','empty',0,'p_empty','parserLogique.py',193),
]
